{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\porto\\\\info340-code\\\\pod\\\\340\\\\src\\\\RandomPage.js\";\nimport React, { Component } from 'react';\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/database';\n\nclass DisplayCard extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: this.props.cardValue.title,\n      className: \"card-img-top\",\n      src: this.props.cardValue.image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 15\n      }\n    }, this.props.cardValue.title), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }\n    }, \"Brand: \", this.props.cardValue.brand), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 15\n      }\n    }, \"Color: \", this.props.cardValue.color), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"card-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 15\n      }\n    }, \"Type: \", this.props.cardValue.type)));\n  }\n\n}\n\nclass DisplayList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardsArray: \"\"\n    };\n  }\n\n  render() {\n    console.log(\"i am here\");\n    console.log(this.props.cardValue);\n    let cardArray = [];\n\n    for (var key of Object.keys(this.props.cardValue)) {\n      console.log(this.props.cardValue[key]);\n      cardArray.push( /*#__PURE__*/React.createElement(DisplayCard, {\n        cardValue: this.props.cardValue[key],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }\n      }));\n    } // let cardArray = this.props.cardValue.map((card) => {\n    //   return(<DisplayCard cardValue={card}/>);\n    // })\n\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-deck\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, cardArray, \";\");\n  }\n\n}\n\nclass RandomPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cardArray: {},\n      BrandCard: '',\n      ColorCard: '',\n      ImageCard: '',\n      TypeCard: '',\n      TitleCard: '',\n      rootRef: firebase.database().ref()\n    };\n  }\n\n  componentDidMount() {\n    //let rootRef = firebase.database().ref();\n    this.state.rootRef.on('value', snapshot => {\n      let objectArray = snapshot.val();\n      console.log(objectArray);\n      console.log(\"i mounted\");\n      this.setState({\n        cardArray: objectArray\n      });\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.data !== this.props.data) {\n      this.state.rootRef.on('value', snapshot => {\n        let objectArray = snapshot.val();\n        console.log(\"entered\");\n        this.setState({\n          cardArray: objectArray\n        });\n      });\n    }\n  }\n\n  addCard() {\n    console.log(\"made it here\");\n    let newCard = {\n      brand: this.state.BrandCard,\n      color: this.state.ColorCard,\n      image: this.state.ImageCard,\n      type: this.state.TypeCard,\n      title: this.state.TitleCard\n    };\n    this.state.rootRef.push(newCard).then(() => {\n      this.setState({\n        BrandCard: \"\",\n        ColorCard: \"\",\n        ImageCard: \"\",\n        TypeCard: \"\",\n        TitleCard: \"\"\n      });\n    }).catch(d => console.log(\"error \" + d));\n    this.render();\n  }\n\n  render() {\n    let newArray = Object.keys(this.state.cardArray);\n    console.log(newArray);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      id: \"containerSearch\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paragraphContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }\n    }, \"What do I own?\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"formContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"InputContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      for: \"brand_input\",\n      \"aria-label\": \"brand Input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"Brand: \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"brand_input\",\n      placeholder: \"e.g. Nike\",\n      type: \"input\",\n      name: \"input\",\n      className: \"form-control\",\n      onChange: event => this.setState({\n        BrandCard: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"color_input\",\n      \"aria-label\": \"color Input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }\n    }, \"Color:  \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"color_input\",\n      placeholder: \"e.g. Purple\",\n      type: \"input\",\n      name: \"input\",\n      className: \"form-control\",\n      onChange: event => this.setState({\n        ColorCard: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"image_input\",\n      \"aria-label\": \"image Input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, \"Image: \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"image_input\",\n      placeholder: \"e.g src\",\n      type: \"input\",\n      name: \"input\",\n      className: \"form-control\",\n      onChange: event => this.setState({\n        ImageCard: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"title_input\",\n      \"aria-label\": \"title Input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, \"Title:  \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"title_input\",\n      placeholder: \"e.g. Grey Hoodie\",\n      type: \"input\",\n      name: \"input\",\n      className: \"form-control\",\n      onChange: event => this.setState({\n        TitleCard: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"type_input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }, \"Type: \"), /*#__PURE__*/React.createElement(\"input\", {\n      id: \"type_input\",\n      placeholder: \"e.g Hoodies\",\n      type: \"input\",\n      name: \"input\",\n      className: \"form-control\",\n      onChange: event => this.setState({\n        TypeCard: event.target.value\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"buttonContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary bg-dark text-white\",\n      onClick: () => this.addCard(),\n      id: \"submitButton\",\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, \"Add Card\")))), /*#__PURE__*/React.createElement(\"div\", {\n      class: \"deckCards\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(DisplayList, {\n      cardValue: this.state.cardArray,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default RandomPage;","map":{"version":3,"sources":["C:/Users/porto/info340-code/pod/340/src/RandomPage.js"],"names":["React","Component","firebase","DisplayCard","render","props","cardValue","title","image","brand","color","type","DisplayList","constructor","state","cardsArray","console","log","cardArray","key","Object","keys","push","RandomPage","BrandCard","ColorCard","ImageCard","TypeCard","TitleCard","rootRef","database","ref","componentDidMount","on","snapshot","objectArray","val","setState","componentDidUpdate","prevProps","prevState","data","addCard","newCard","then","catch","d","newArray","event","target","value"],"mappings":"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","sourcesContent":["\r\n\r\nimport React, { Component } from 'react';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\nclass DisplayCard extends Component {\r\n    render() {\r\n          return(\r\n              <div className=\"card\">\r\n                  <img alt={this.props.cardValue.title} className=\"card-img-top\" src={this.props.cardValue.image} />\r\n              <div className=\"card-body\">\r\n              <h2 className=\"card-title\">{this.props.cardValue.title}</h2>\r\n              <p className=\"card-text\">Brand: {this.props.cardValue.brand}</p>\r\n              <p className=\"card-text\">Color: {this.props.cardValue.color}</p>\r\n              <p className=\"card-text\">Type: {this.props.cardValue.type}</p>\r\n              </div>\r\n              </div>\r\n          );\r\n      }\r\n    }\r\n    \r\nclass DisplayList extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n         cardsArray: \"\"\r\n      }\r\n    }\r\n   \r\n\r\n    render() {\r\n      console.log(\"i am here\");\r\n      console.log(this.props.cardValue);\r\n      let cardArray = [];\r\n\r\n      for (var key of Object.keys(this.props.cardValue)) {\r\n        console.log(this.props.cardValue[key])\r\n        cardArray.push(<DisplayCard cardValue={this.props.cardValue[key]} />);\r\n      }\r\n    \r\n      // let cardArray = this.props.cardValue.map((card) => {\r\n      //   return(<DisplayCard cardValue={card}/>);\r\n      // })\r\n\r\n      return(\r\n        <div className=\"card-deck\">\r\n          {cardArray};\r\n        </div>\r\n      );\r\n\r\n}\r\n}\r\n\r\nclass RandomPage extends Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        cardArray: {},\r\n        BrandCard: '',\r\n        ColorCard: '',\r\n        ImageCard: '',\r\n        TypeCard: '', \r\n        TitleCard: '',\r\n        rootRef: firebase.database().ref()\r\n          }\r\n    }\r\n  \r\n    componentDidMount() {\r\n      //let rootRef = firebase.database().ref();\r\n       \r\n      this.state.rootRef.on('value', (snapshot) => {\r\n        let objectArray = snapshot.val();\r\n        console.log(objectArray);\r\n        console.log(\"i mounted\");\r\n        this.setState({cardArray: objectArray});\r\n      });\r\n    }\r\n  \r\n   componentDidUpdate(prevProps, prevState) {\r\n     if (prevProps.data !== this.props.data) {\r\n     this.state.rootRef.on('value', (snapshot) => {\r\n        let objectArray = snapshot.val();\r\n        console.log(\"entered\");\r\n        this.setState({cardArray: objectArray});\r\n        });\r\n      }\r\n    }\r\n  \r\n    addCard() {\r\n      console.log(\"made it here\");\r\n      let newCard = {\r\n        brand: this.state.BrandCard,\r\n        color: this.state.ColorCard, \r\n        image: this.state.ImageCard, \r\n        type: this.state.TypeCard, \r\n        title: this.state.TitleCard\r\n      }\r\n  \r\n      this.state.rootRef\r\n      .push(newCard)\r\n      .then(() => {\r\n        this.setState({\r\n          BrandCard:\"\",\r\n          ColorCard:\"\",\r\n          ImageCard:\"\",\r\n          TypeCard:\"\",\r\n          TitleCard:\"\"\r\n      })}).catch((d) => console.log(\"error \" + d));\r\n  \r\n      this.render();\r\n    }\r\n  \r\n  \r\n  \r\n    render() {\r\n      let newArray = Object.keys(this.state.cardArray);\r\n      console.log(newArray);\r\n  \r\n      return (\r\n        <div id=\"containerSearch\">\r\n          <div className=\"paragraphContainer\">\r\n            <h1>\r\n              What do I own? \r\n            </h1>\r\n          </div>\r\n          <div className=\"formContainer\">\r\n            <form>\r\n              <div className=\"InputContainer\">\r\n  \r\n                <label for=\"brand_input\" aria-label=\"brand Input\">Brand: </label>\r\n                <input \r\n                  id=\"brand_input\" \r\n                  placeholder=\"e.g. Nike\" \r\n                  type=\"input\" name=\"input\" \r\n                  className= \"form-control\"\r\n                  onChange= {(event) => this.setState({BrandCard: event.target.value})}\r\n                  />\r\n  \r\n                <label for=\"color_input\" aria-label=\"color Input\">Color:  </label>\r\n                <input \r\n                  id=\"color_input\" \r\n                  placeholder=\"e.g. Purple\" \r\n                  type=\"input\" name=\"input\" \r\n                  className= \"form-control\"\r\n                  onChange= {(event) => this.setState({ColorCard: event.target.value})}\r\n                  />\r\n  \r\n                <label for=\"image_input\" aria-label=\"image Input\">Image: </label>\r\n                <input \r\n                  id=\"image_input\" \r\n                  placeholder=\"e.g src\" \r\n                  type=\"input\" name=\"input\"\r\n                  className= \"form-control\"\r\n                  onChange= {(event) => this.setState({ImageCard: event.target.value})}\r\n                  />\r\n  \r\n  \r\n                <label for=\"title_input\" aria-label=\"title Input\">Title:  </label>\r\n                <input \r\n                  id=\"title_input\" \r\n                  placeholder=\"e.g. Grey Hoodie\" \r\n                  type=\"input\" name=\"input\" \r\n                  className= \"form-control\"\r\n                  onChange= {(event) => this.setState({TitleCard: event.target.value})}\r\n                  />\r\n  \r\n                <label for=\"type_input\">Type: </label>\r\n                <input \r\n                  id=\"type_input\" \r\n                  placeholder=\"e.g Hoodies\" \r\n                  type=\"input\" name=\"input\" \r\n                  className= \"form-control\"\r\n                  onChange= {(event) => this.setState({TypeCard: event.target.value})}\r\n                  />\r\n              </div>\r\n  \r\n              <div class=\"buttonContainer\">\r\n                <button className=\"btn btn-primary bg-dark text-white\" onClick={() => this.addCard()} id=\"submitButton\" type=\"submit\">Add Card</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <div class=\"deckCards\">\r\n            <DisplayList cardValue={this.state.cardArray}/>\r\n          </div>\r\n          </div>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default RandomPage;"]},"metadata":{},"sourceType":"module"}