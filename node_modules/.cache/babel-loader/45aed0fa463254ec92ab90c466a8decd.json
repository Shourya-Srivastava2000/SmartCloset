{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\porto\\\\info340-code\\\\pod\\\\340\\\\src\\\\BrandList.js\";\nimport React, { Component } from 'react';\nimport { MultiList } from '@appbaseio/reactivesearch';\n\nclass BrandList extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(MultiList, {\n      componentId: \"brands-list\",\n      dataField: \"brand.keyword\",\n      className: \"brands-filter\",\n      size: 40,\n      queryFormat: \"or\",\n      selectAllLabel: \"All Brands\",\n      showCheckbox: true,\n      showCount: true,\n      showSearch: false,\n      placeholder: \"Search for a Brand\",\n      react: {\n        and: [\"mainSearch\", \"results\", \"colors-list\", \"types-list\"]\n      },\n      render: ({\n        loading,\n        error\n      }) => {\n        if (loading) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 16\n            }\n          }, \"Still Looking for Clothes\");\n        }\n\n        if (error) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 13\n            }\n          }, \"Something went wrong! Error: \", JSON.stringify(error));\n        }\n      },\n      renderNoSuggestion: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 9\n        }\n      }, \"No suggestions found\"),\n      showFilter: true,\n      filterLabel: \"brand\",\n      URLParams: false,\n      innerClass: {\n        label: \"list-item\",\n        input: \"list-input\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default BrandList;","map":{"version":3,"sources":["C:/Users/porto/info340-code/pod/340/src/BrandList.js"],"names":["React","Component","MultiList","BrandList","render","and","loading","error","JSON","stringify","label","input"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAAyB,2BAAzB;;AAEA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC9BG,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AACF,MAAA,WAAW,EAAC,aADV;AAEF,MAAA,SAAS,EAAC,eAFR;AAGF,MAAA,SAAS,EAAC,eAHR;AAIF,MAAA,IAAI,EAAE,EAJJ;AAKF,MAAA,WAAW,EAAC,IALV;AAMF,MAAA,cAAc,EAAC,YANb;AAOF,MAAA,YAAY,EAAE,IAPZ;AAQF,MAAA,SAAS,EAAE,IART;AASF,MAAA,UAAU,EAAE,KATV;AAUF,MAAA,WAAW,EAAC,oBAVV;AAWF,MAAA,KAAK,EAAE;AACHC,QAAAA,GAAG,EAAE,CACD,YADC,EAED,SAFC,EAGD,aAHC,EAID,YAJC;AADF,OAXL;AAoBF,MAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,OADO;AAEPC,QAAAA;AAFO,OAAD,KAGF;AAEN,YAAGD,OAAH,EAAY;AACV,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACD;;AAED,YAAGC,KAAH,EAAU;AACR,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEYC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAFZ,CADJ;AAMD;AACA,OArCC;AAuCF,MAAA,kBAAkB,EAAE,mBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAxCA;AA+CF,MAAA,UAAU,EAAE,IA/CV;AAgDF,MAAA,WAAW,EAAC,OAhDV;AAiDF,MAAA,SAAS,EAAE,KAjDT;AAkDF,MAAA,UAAU,EAAE;AACRG,QAAAA,KAAK,EAAE,WADC;AAERC,QAAAA,KAAK,EAAE;AAFC,OAlDV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAyDH;;AA3D+B;;AA8DlC,eAAeR,SAAf","sourcesContent":["\r\nimport React, { Component } from 'react';\r\nimport { MultiList} from '@appbaseio/reactivesearch';\r\n\r\nclass BrandList extends Component {\r\n    render() {\r\n      return(\r\n        <MultiList     \r\n      componentId=\"brands-list\"\r\n      dataField=\"brand.keyword\"\r\n      className=\"brands-filter\"\r\n      size={40}\r\n      queryFormat=\"or\"\r\n      selectAllLabel=\"All Brands\"\r\n      showCheckbox={true}\r\n      showCount={true}\r\n      showSearch={false}\r\n      placeholder=\"Search for a Brand\"\r\n      react={{          \r\n          and: [\r\n              \"mainSearch\",\r\n              \"results\",\r\n              \"colors-list\",\r\n              \"types-list\"\r\n          ]\r\n      }}        \r\n      \r\n      render={({\r\n        loading,\r\n        error\r\n      }) => {\r\n  \r\n      if(loading) {\r\n        return <div>Still Looking for Clothes</div>\r\n      }\r\n  \r\n      if(error) {\r\n        return (\r\n            <div>\r\n                Something went wrong!\r\n                Error: {JSON.stringify(error)}\r\n            </div>\r\n        )\r\n      }\r\n      }}\r\n  \r\n      renderNoSuggestion={() => (\r\n        <div>\r\n            No suggestions found\r\n        </div>\r\n      )\r\n      }\r\n  \r\n  \r\n      showFilter={true}\r\n      filterLabel=\"brand\"\r\n      URLParams={false} \r\n      innerClass={{ \r\n          label: \"list-item\",\r\n          input: \"list-input\"\r\n      }}\r\n      />\r\n    )\r\n  }\r\n  }\r\n  \r\nexport default BrandList;"]},"metadata":{},"sourceType":"module"}