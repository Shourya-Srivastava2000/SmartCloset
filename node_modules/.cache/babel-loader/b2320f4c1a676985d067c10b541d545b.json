{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\porto\\\\info340-code\\\\pod\\\\340\\\\src\\\\TypesList.js\";\nimport React, { Component } from 'react';\nimport { MultiList } from '@appbaseio/reactivesearch';\n\nclass TypesList extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(MultiList, {\n      componentId: \"types-list\",\n      dataField: \"type.keyword\",\n      className: \"types-filter\",\n      size: 40,\n      queryFormat: \"or\",\n      selectAllLabel: \"All Product Types\",\n      showCheckbox: true,\n      showCount: true,\n      showSearch: false,\n      placeholder: \"Search for a Product Types\",\n      react: {\n        and: [\"mainSearch\", \"results\", \"colors-list\", \"brands-list\"]\n      },\n      render: ({\n        loading,\n        error\n      }) => {\n        if (loading) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 20\n            }\n          }, \"Still Looking for Clothes\");\n        }\n\n        if (error) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }\n          }, \"Something went wrong! Error: \", JSON.stringify(error));\n        }\n      },\n      renderNoSuggestion: () => /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }, \"No suggestions found\"),\n      showFilter: true,\n      filterLabel: \"type\",\n      URLParams: false,\n      innerClass: {\n        label: \"list-item\",\n        input: \"list-input\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6,\n        columnNumber: 9\n      }\n    });\n  }\n\n}\n\nexport default TypesList;","map":{"version":3,"sources":["C:/Users/porto/info340-code/pod/340/src/TypesList.js"],"names":["React","Component","MultiList","TypesList","render","and","loading","error","JSON","stringify","label","input"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAAyB,2BAAzB;;AACA,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAC9BG,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,SAAD;AACE,MAAA,WAAW,EAAC,YADd;AAEE,MAAA,SAAS,EAAC,cAFZ;AAGE,MAAA,SAAS,EAAC,cAHZ;AAIE,MAAA,IAAI,EAAE,EAJR;AAKE,MAAA,WAAW,EAAC,IALd;AAME,MAAA,cAAc,EAAC,mBANjB;AAOE,MAAA,YAAY,EAAE,IAPhB;AAQE,MAAA,SAAS,EAAE,IARb;AASE,MAAA,UAAU,EAAE,KATd;AAUE,MAAA,WAAW,EAAC,4BAVd;AAWE,MAAA,KAAK,EAAE;AACHC,QAAAA,GAAG,EAAE,CACD,YADC,EAED,SAFC,EAGD,aAHC,EAID,aAJC;AADF,OAXT;AAoBE,MAAA,MAAM,EAAE,CAAC;AACPC,QAAAA,OADO;AAEPC,QAAAA;AAFO,OAAD,KAGF;AAEN,YAAGD,OAAH,EAAY;AACV,8BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAP;AACD;;AAED,YAAGC,KAAH,EAAU;AACR,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAEYC,IAAI,CAACC,SAAL,CAAeF,KAAf,CAFZ,CADJ;AAMD;AACA,OArCH;AAuCE,MAAA,kBAAkB,EAAE,mBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAxCJ;AA8CE,MAAA,UAAU,EAAE,IA9Cd;AA+CE,MAAA,WAAW,EAAC,MA/Cd;AAgDE,MAAA,SAAS,EAAE,KAhDb;AAiDE,MAAA,UAAU,EAAE;AACRG,QAAAA,KAAK,EAAE,WADC;AAERC,QAAAA,KAAK,EAAE;AAFC,OAjDd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAwDD;;AA1D6B;;AA4DhC,eAAeR,SAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { MultiList} from '@appbaseio/reactivesearch';\r\nclass TypesList extends Component {\r\n    render() {\r\n      return(\r\n        <MultiList\r\n          componentId=\"types-list\"\r\n          dataField=\"type.keyword\"\r\n          className=\"types-filter\"\r\n          size={40}\r\n          queryFormat=\"or\"\r\n          selectAllLabel=\"All Product Types\"\r\n          showCheckbox={true}\r\n          showCount={true}\r\n          showSearch={false}\r\n          placeholder=\"Search for a Product Types\"\r\n          react={{\r\n              and: [\r\n                  \"mainSearch\",\r\n                  \"results\",\r\n                  \"colors-list\",\r\n                  \"brands-list\"\r\n              ]\r\n          }}\r\n\r\n          render={({\r\n            loading,\r\n            error\r\n          }) => {\r\n\r\n          if(loading) {\r\n            return <div>Still Looking for Clothes</div>\r\n          }\r\n\r\n          if(error) {\r\n            return (\r\n                <div>\r\n                    Something went wrong!\r\n                    Error: {JSON.stringify(error)}\r\n                </div>\r\n            )\r\n          }\r\n          }}\r\n\r\n          renderNoSuggestion={() => (\r\n            <div>\r\n                No suggestions found\r\n            </div>\r\n          )\r\n          }\r\n\r\n          showFilter={true}\r\n          filterLabel=\"type\"\r\n          URLParams={false}\r\n          innerClass={{\r\n              label: \"list-item\",\r\n              input: \"list-input\"\r\n          }}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  export default TypesList\r\n"]},"metadata":{},"sourceType":"module"}