{"ast":null,"code":"\"use strict\";\n/* eslint-disable */\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n\nif (!Array.prototype.find) {\n  Object.defineProperty(Array.prototype, \"find\", {\n    value: function value(predicate) {\n      // 1. Let O be ? ToObject(this value).\n      if (this == null) {\n        throw new TypeError('\"this\" is null or not defined');\n      }\n\n      var o = Object(this); // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\n      var len = o.length >>> 0; // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n\n      if (typeof predicate !== \"function\") {\n        throw new TypeError(\"predicate must be a function\");\n      } // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\n\n      var thisArg = arguments[1]; // 5. Let k be 0.\n\n      var k = 0; // 6. Repeat, while k < len\n\n      while (k < len) {\n        // a. Let Pk be ! ToString(k).\n        // b. Let kValue be ? Get(O, Pk).\n        // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n        // d. If testResult is true, return kValue.\n        var kValue = o[k];\n\n        if (predicate.call(thisArg, kValue, k, o)) {\n          return kValue;\n        } // e. Increase k by 1.\n\n\n        k++;\n      } // 7. Return undefined.\n\n\n      return undefined;\n    },\n    configurable: true,\n    writable: true\n  });\n}","map":{"version":3,"sources":["C:/Users/porto/info340-code/pod/340/node_modules/@appbaseio/reactivesearch/lib/polyfills.js"],"names":["Array","prototype","find","Object","defineProperty","value","predicate","TypeError","o","len","length","thisArg","arguments","k","kValue","call","undefined","configurable","writable"],"mappings":"AAAA;AAEA;AAEA;;AAEA,IAAI,CAACA,KAAK,CAACC,SAAN,CAAgBC,IAArB,EAA2B;AAC1BC,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,KAAK,CAACC,SAA5B,EAAuC,MAAvC,EAA+C;AAC9CI,IAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,SAAf,EAA0B;AAChC;AACA,UAAI,QAAQ,IAAZ,EAAkB;AACjB,cAAM,IAAIC,SAAJ,CAAc,+BAAd,CAAN;AACA;;AAED,UAAIC,CAAC,GAAGL,MAAM,CAAC,IAAD,CAAd,CANgC,CAQhC;;AACA,UAAIM,GAAG,GAAGD,CAAC,CAACE,MAAF,KAAa,CAAvB,CATgC,CAWhC;;AACA,UAAI,OAAOJ,SAAP,KAAqB,UAAzB,EAAqC;AACpC,cAAM,IAAIC,SAAJ,CAAc,8BAAd,CAAN;AACA,OAd+B,CAgBhC;;;AACA,UAAII,OAAO,GAAGC,SAAS,CAAC,CAAD,CAAvB,CAjBgC,CAmBhC;;AACA,UAAIC,CAAC,GAAG,CAAR,CApBgC,CAsBhC;;AACA,aAAOA,CAAC,GAAGJ,GAAX,EAAgB;AACf;AACA;AACA;AACA;AACA,YAAIK,MAAM,GAAGN,CAAC,CAACK,CAAD,CAAd;;AACA,YAAIP,SAAS,CAACS,IAAV,CAAeJ,OAAf,EAAwBG,MAAxB,EAAgCD,CAAhC,EAAmCL,CAAnC,CAAJ,EAA2C;AAC1C,iBAAOM,MAAP;AACA,SARc,CASf;;;AACAD,QAAAA,CAAC;AACD,OAlC+B,CAoChC;;;AACA,aAAOG,SAAP;AACA,KAvC6C;AAwC9CC,IAAAA,YAAY,EAAE,IAxCgC;AAyC9CC,IAAAA,QAAQ,EAAE;AAzCoC,GAA/C;AA2CA","sourcesContent":["\"use strict\";\n\n/* eslint-disable */\n\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\n\nif (!Array.prototype.find) {\n\tObject.defineProperty(Array.prototype, \"find\", {\n\t\tvalue: function value(predicate) {\n\t\t\t// 1. Let O be ? ToObject(this value).\n\t\t\tif (this == null) {\n\t\t\t\tthrow new TypeError('\"this\" is null or not defined');\n\t\t\t}\n\n\t\t\tvar o = Object(this);\n\n\t\t\t// 2. Let len be ? ToLength(? Get(O, \"length\")).\n\t\t\tvar len = o.length >>> 0;\n\n\t\t\t// 3. If IsCallable(predicate) is false, throw a TypeError exception.\n\t\t\tif (typeof predicate !== \"function\") {\n\t\t\t\tthrow new TypeError(\"predicate must be a function\");\n\t\t\t}\n\n\t\t\t// 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\t\t\tvar thisArg = arguments[1];\n\n\t\t\t// 5. Let k be 0.\n\t\t\tvar k = 0;\n\n\t\t\t// 6. Repeat, while k < len\n\t\t\twhile (k < len) {\n\t\t\t\t// a. Let Pk be ! ToString(k).\n\t\t\t\t// b. Let kValue be ? Get(O, Pk).\n\t\t\t\t// c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n\t\t\t\t// d. If testResult is true, return kValue.\n\t\t\t\tvar kValue = o[k];\n\t\t\t\tif (predicate.call(thisArg, kValue, k, o)) {\n\t\t\t\t\treturn kValue;\n\t\t\t\t}\n\t\t\t\t// e. Increase k by 1.\n\t\t\t\tk++;\n\t\t\t}\n\n\t\t\t// 7. Return undefined.\n\t\t\treturn undefined;\n\t\t},\n\t\tconfigurable: true,\n\t\twritable: true\n\t});\n}"]},"metadata":{},"sourceType":"script"}